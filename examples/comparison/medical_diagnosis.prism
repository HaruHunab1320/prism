// Import required modules
import { validate_symptom, semantic_match, get_disease_pattern } from medical;
import { split, join } from utils;
import { complete_with_config } from llm;

// Define symptoms and diseases
let symptoms = ["fever", "cough", "fatigue"];
let diseases = ["flu", "covid", "cold"];
let results = [];

// Process each symptom
for (let i = 0; i < symptoms.len(); i = i + 1) {
    let symptom = symptoms[i];
    let validated = medical.validate_symptom(symptom);
    
    if (validated > 0.5) {
        let matches = [];
        for (let j = 0; j < diseases.len(); j = j + 1) {
            let disease = diseases[j];
            let match = medical.semantic_match(symptom, disease);
            let pattern = medical.get_disease_pattern(disease);
            
            matches.push({
                disease: disease,
                score: match,
                typical_symptoms: pattern
            });
        }
        
        results.push({
            symptom: symptom,
            confidence: validated,
            matches: matches
        });
    }
}

// Get additional context from LLM
let config = {
    temperature: 0.7,
    max_tokens: 150
};

let analysis = llm.complete_with_config(
    `Analyze these medical results: ${results.to_string()}
     Provide insights about the symptom-disease relationships.`,
    config
);

// Return comprehensive results
{
    results: results,
    analysis: analysis,
    metadata: {
        total_symptoms: symptoms.len(),
        total_diseases: diseases.len(),
        timestamp: utils.now()
    }
} 